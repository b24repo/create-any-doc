{"ast":null,"code":"import axios from 'axios';\n\n// Use relative URLs to work with the proxy configuration in package.json\nconst api = axios.create({\n  baseURL: '',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const documentApi = {\n  async generateDocument(request) {\n    const response = await api.post('/api/documents/generate', request);\n    return response.data;\n  },\n  async getQuestions(framework, documentType) {\n    const response = await api.get(`/api/documents/questions`, {\n      params: {\n        framework,\n        documentType\n      }\n    });\n    return response.data;\n  },\n  async validateQuality(content, context) {\n    const response = await api.post('/api/documents/validate-quality', {\n      content,\n      context\n    });\n    return response.data;\n  },\n  async getFrameworks() {\n    const response = await api.get('/api/documents/frameworks');\n    return response.data;\n  },\n  async getDocumentTypes() {\n    const response = await api.get('/api/documents/document-types');\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","documentApi","generateDocument","request","response","post","data","getQuestions","framework","documentType","get","params","validateQuality","content","context","getFrameworks","getDocumentTypes"],"sources":["/Users/virendra-macbook-pro-2025/Documents/GitHub/create-any-doc/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\n// Use relative URLs to work with the proxy configuration in package.json\nconst api = axios.create({\n  baseURL: '',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport interface DocumentGenerationRequest {\n  documentType: string;\n  framework: string;\n  industry: string;\n  language?: string;\n  customRequirements?: string;\n  userResponses?: any[];\n}\n\nexport interface DocumentGenerationResponse {\n  type?: 'questions' | 'document';\n  questions?: any[];\n  totalQuestions?: number;\n  content?: string;\n  qualityScore?: number;\n  implementationGuide?: any;\n  recommendations?: string[];\n}\n\nexport const documentApi = {\n  async generateDocument(request: DocumentGenerationRequest): Promise<DocumentGenerationResponse> {\n    const response = await api.post('/api/documents/generate', request);\n    return response.data;\n  },\n\n  async getQuestions(framework: string, documentType: string) {\n    const response = await api.get(`/api/documents/questions`, {\n      params: { framework, documentType }\n    });\n    return response.data;\n  },\n\n  async validateQuality(content: string, context: any) {\n    const response = await api.post('/api/documents/validate-quality', {\n      content,\n      context\n    });\n    return response.data;\n  },\n\n  async getFrameworks() {\n    const response = await api.get('/api/documents/frameworks');\n    return response.data;\n  },\n\n  async getDocumentTypes() {\n    const response = await api.get('/api/documents/document-types');\n    return response.data;\n  }\n};\n\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,EAAE;EACXC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAqBF,OAAO,MAAMC,WAAW,GAAG;EACzB,MAAMC,gBAAgBA,CAACC,OAAkC,EAAuC;IAC9F,MAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,yBAAyB,EAAEF,OAAO,CAAC;IACnE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMC,YAAYA,CAACC,SAAiB,EAAEC,YAAoB,EAAE;IAC1D,MAAML,QAAQ,GAAG,MAAMP,GAAG,CAACa,GAAG,CAAC,0BAA0B,EAAE;MACzDC,MAAM,EAAE;QAAEH,SAAS;QAAEC;MAAa;IACpC,CAAC,CAAC;IACF,OAAOL,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMM,eAAeA,CAACC,OAAe,EAAEC,OAAY,EAAE;IACnD,MAAMV,QAAQ,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,iCAAiC,EAAE;MACjEQ,OAAO;MACPC;IACF,CAAC,CAAC;IACF,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMS,aAAaA,CAAA,EAAG;IACpB,MAAMX,QAAQ,GAAG,MAAMP,GAAG,CAACa,GAAG,CAAC,2BAA2B,CAAC;IAC3D,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMU,gBAAgBA,CAAA,EAAG;IACvB,MAAMZ,QAAQ,GAAG,MAAMP,GAAG,CAACa,GAAG,CAAC,+BAA+B,CAAC;IAC/D,OAAON,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,eAAeT,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}